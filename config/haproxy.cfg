#
# The idea is for haproxy to terminate SSL (and HTTP2 when it supports it),
# and just pass it through to varnish in plain HTTP/1.1
# If the request is being upgraded to a websocket connection, pass it through
# to the chat which can actually deal with it.
# In any other case, just pass it onto varnish, which will actually call nginx
# and handle caching.
#
# Or in illustrated form:
#
#
#                 +----------+
#      HTTP/S     |          |
#+--------------> | HAPROXY  |
#    WEBSOCKET    |          |
#+--------------> +---+------+
#                     |      |  HTTP    +-----------+    +---------+    +---------+
#                     |      +--------> |           |    |         |    |         |
#                     |                 |  VARNISH  +--> |  NGINX  +--> | PHP+FPM |
#                     |                 |           |    |         |    |         |
#                     |                 +-----------+    +---------+    +---------+
#                     |
#                     |                 +--------+
#                     |                 |        |
#                     |   WEBSOCKET     |  CHAT  |
#                     +---------------> |        |
#                                       +--------+
#

global
    #log /dev/log local0
    #log /dev/log local1 info
    log 127.0.0.1 local2
    maxconn 100000

    chroot /var/lib/haproxy
    pidfile /var/run/haproxy.pid
    stats socket /var/lib/haproxy/stats mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS:!AES256:!RC4
    tune.ssl.default-dh-param 2048

defaults
    log     global
    mode    http
    option  http-server-close
    option  dontlognull
    maxconn 100000
    timeout connect 5s
    timeout client  30s
    timeout server  30s
    timeout tunnel  1h
    timeout check   500ms

frontend www
    maxconn 90000
    bind :80 v4v6 defer-accept maxconn 80000
    bind :::80 v6only defer-accept  maxconn 80000
    # TODO switch to this when appropriate
    #bind :443 ssl alpn http/1.1,spdy/3.1,h2-14 crt /etc/whereverthefuck no-sslv3 defer-accept maxconn 80000
    bind :443 ssl crt /etc/ssl/certs/destiny.gg_combined.crt no-sslv3 defer-accept  maxconn 80000
    bind :::443 ssl crt /etc/ssl/certs/destiny.gg_combined.crt no-sslv3 defer-accept  maxconn 80000
    bind :9998 v4v6 defer-accept maxconn 50000
    bind :::9998 v6only v4v6 defer-accept maxconn 50000
    bind :9997 v4v6 defer-accept maxconn 50000
    bind :::9997 v6only defer-accept maxconn 50000

    acl BLOCKEDIP src -f /var/lib/haproxy/ipban.map
    tcp-request connection reject if BLOCKEDIP

    acl NEEDAUTH hdr_beg(host) -i phpma. stats.
    acl AUTHED http_auth(users)
    http-request auth realm RESTRICTED if NEEDAUTH !AUTHED

    reqidel ^X-Real-IP:
    acl SSL dst_port 443
    reqadd X-Forwarded-Proto:\ https if SSL
    reqadd X-Forwarded-Proto:\ http if !SSL
    # dont add STS header for 1 month if on SSL, twitch doesnt support it for mobile
    #rspadd Strict-Transport-Security:\ max-age=2700000;\ includeSubDomains;\ preload if SSL

    acl CHAT dst_port 9998
    acl DEVCHAT dst_port 9997
    acl WSPATH path_beg -i /ws
    acl WEBSOCKET hdr(Upgrade) -i WebSocket

    # redirect if coming from non-ssl non-chat sites
    #redirect scheme https code 301 if !SSL !CHAT !DEVCHAT !WEBSOCKET

    acl STATHOST hdr_beg(host) stats.
    use_backend stats if STATHOST

    # use the chat for websockets if its a non-dev site
    # and use the devchat if it is a dev-site
    use_backend chat if WEBSOCKET !NEEDAUTH
    use_backend chat if CHAT or WSPATH
    use_backend devchat if WEBSOCKET NEEDAUTH
    use_backend devchat if DEVCHAT

    default_backend varnish

backend varnish
    option httplog
    option forwardfor header X-Real-IP
    server srv 127.0.0.1:800 maxconn 10000

backend chat
    option httplog
    option forwardfor header X-Real-IP
    server srv 127.0.0.1:1118 maxconn 20000

backend devchat
    option httplog
    option forwardfor header X-Real-IP
    server srv 127.0.0.1:1117 maxconn 20000

backend stats
    stats enable
    stats uri /
    stats admin if TRUE
    stats refresh 5s

userlist users
    user destiny password needtosetthisproperly
