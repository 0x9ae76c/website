<?xml version="1.0"?>
<project name="destinygg" default="build">
	
	<property name="yuicompressor.jar" value="build" />

	<target name="package" depends="readcomposerproperties">
		<property name="build.dir" value="${basedir}/../destiny_packages/${composer.version}" />
		<mkdir dir="${build.dir}" />
		<antcall target="clean" />
		<antcall target="copybuild" />
		<antcall target="packresources" />
		<zip destfile="${build.dir}/../destiny.${composer.version}.zip" basedir="${build.dir}" />
		<delete dir="${build.dir}"/>
	</target>
	
	<target name="install" depends="readcomposerproperties">
		<property name="build.dir" value="${basedir}/../destiny_build" />
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.dir}/tmp" />
		<mkdir dir="${build.dir}/log" />
		<antcall target="clean" />
		<antcall target="copybuild" />
		<antcall target="copyvendor" />
		<antcall target="packresources" />
	</target>
		
	
	<target name="build" depends="readcomposerproperties">
		<property name="build.dir" value="${basedir}/../destiny_build" />
		<antcall target="clean" />
		<antcall target="copybuild" />
	</target>
	
	<target name="clean">
		<delete includeemptydirs="true" quiet="true">
			<fileset dir="${build.dir}" includes="**/**" excludes="tmp/**,log/**,vendor/**" />
		</delete>
	</target>

	<target name="copyvendor">
		<delete includeemptydirs="true" quiet="true">
			<fileset dir="${build.dir}" includes="vendor/**" />
		</delete>
		<copy todir="${build.dir}/vendor" includeEmptyDirs="false">
			<fileset dir="vendor" excludes="/nervo/,**/.git/,**/tests/,**/samples/,**/examples/,**/doc/,**/bin/,**/.travis.yml,**/VERSION**,**/CHANGELOG.**,**/README.**,**/FAQ.**,**/CONTRIBUTING.**,**/LICENSE**,**/composer.json"/>
		</copy>
	</target>
	
	<target name="copybuild">
		<copy todir="${build.dir}/lib">
			<fileset dir="lib" />
		</copy>
		<copy todir="${build.dir}/public">
			<fileset dir="public" />
		</copy>
		<copy todir="${build.dir}/static">
			<fileset dir="static" />
		</copy>
		<copy todir="${build.dir}/cron">
			<fileset dir="cron" />
		</copy>
		<copy todir="${build.dir}/config">
			<fileset dir="config" />
		</copy>
		<copy todir="${build.dir}/">
			<fileset file="composer.json" />
		</copy>
	</target>

	<target name="packresources">

		<!-- Errors concat and compress -->
		<antcall target="compress">
			<param name="file" value="${build.dir}/static/errors/css/style.css" />
		</antcall>
		
		<!-- Chat concat and compress -->
		<antcall target="compress">
			<param name="file" value="${build.dir}/static/chat/css/style.css" />
		</antcall>
		<move file="${build.dir}/static/chat/css/style.css" tofile="${build.dir}/static/chat/css/style.${composer.version}.css" />
		<concat destfile="${build.dir}/static/chat/js/engine.${composer.version}.js" fixlastline="yes" append="no">
			<fileset file="${build.dir}/static/chat/js/gui.js" />
			<fileset file="${build.dir}/static/chat/js/impl.js" />
		</concat>
		<antcall target="compress">
			<param name="file" value="${build.dir}/static/chat/js/engine.${composer.version}.js" />
		</antcall>

		<!-- CSS concat and compress -->
		<concat destfile="${build.dir}/static/web/css/style.${composer.version}.css" fixlastline="yes" append="no">
			<fileset file="${build.dir}/static/web/css/style.css" />
			<fileset file="${build.dir}/static/web/css/flags.css" />
			<fileset file="${build.dir}/static/web/css/bigscreen.css" />
			<fileset file="${build.dir}/static/web/css/fantasy.css" />
			<fileset file="${build.dir}/static/web/css/teammaker.css" />
		</concat>
		<antcall target="compress">
			<param name="file" value="${build.dir}/static/web/css/style.${composer.version}.css" />
		</antcall>
		<delete><fileset dir="${build.dir}/static/web/css/" excludes="style.${composer.version}.css" includes="*.css" /></delete>
		
		<!-- Js concat and compress -->
		<concat destfile="${build.dir}/static/web/js/destiny.${composer.version}.js" fixlastline="yes" append="no">
			<fileset file="${build.dir}/static/web/js/utils.js" />
			<fileset file="${build.dir}/static/web/js/destiny.js" />
			<fileset file="${build.dir}/static/web/js/feed.js" />
			<fileset file="${build.dir}/static/web/js/profile.js" />
			<fileset file="${build.dir}/static/web/js/twitch.js" />
			<fileset file="${build.dir}/static/web/js/teambar.js" />
			<fileset file="${build.dir}/static/web/js/teamcreator.js" />
			<fileset file="${build.dir}/static/web/js/challenger.js" />
			<fileset file="${build.dir}/static/web/js/ui.js" />
		</concat>
		<antcall target="compress">
			<param name="file" value="${build.dir}/static/web/js/destiny.${composer.version}.js" />
		</antcall>
		<delete><fileset dir="${build.dir}/static/web/js/" excludes="destiny.${composer.version}.js" includes="*.js" /></delete>
		
	</target>
	
	<target name="compress">
		<description>Compresses/Minifies javascript and css</description>
		<java jar="${yuicompressor.jar}" fork="true">
			<arg value="${file}" />
			<arg value="-o" />
			<arg value="${file}" />
			<arg value="--nomunge" />
		</java>
		<echo>Compressed... ${file}</echo>
	</target>
	
	<target name="readcomposerproperties">
		<property name="composer.file" value="${basedir}/composer.json" />
		<description>Reads a composer.json file and put the first level of the json array on the global ant properties</description>
		<script language="javascript" setbeans="true">
		<![CDATA[
			importClass(java.io.File);
			importClass(java.io.FileReader);
			importClass(java.io.BufferedReader);
			importClass(java.io.FileWriter);
			importClass(java.io.BufferedWriter);
			var composerfile = project.getProperty("composer.file");
			var file = new File(composerfile);
			var fr = new FileReader(file);
			var br = new BufferedReader(fr);
			var json = "";
			while ((strLine = br.readLine()) != null){
				json += strLine;
			}
			var struct = eval("("+json+")");
			for (i in struct) {
				if(struct[i] instanceof Object)
					continue;
				echo = project.createTask("echo");
				echo.setMessage(i + "=" + struct[i]);
				echo.perform();
				project.setProperty("composer."+i, struct[i]);
			}
		]]>
		</script>
	</target>

</project>